name: CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: astanil/flask

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Git-checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4 
        with:
          python-version: '3.10'

      - name: Lint flake8
        uses: py-actions/flake8@v2

  build_and_push:
    runs-on: ubuntu-latest
    name: Build_and_push
    needs: Lint
    steps:
      - name: Git-checkout
        uses: actions/checkout@v3

      - name: Get environment
        run: cp app/.env.example app/.env 

      - name: Docker hub login
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker-compose
        run: docker-compose up -d --no-deps --build flask-app
        
      - name: Push
        uses: docker/build-push-action@v3
        with:
          context: ./app
          push: true
          tags: |
            ${{ env.REGISTRY }}:latest
 
  deploy: 
    runs-on: ubuntu-latest
    name: Deploy
    needs: Build_and_push
    strategy:
      matrix:
        HOST: [3.74.156.7, 3.73.123.245]
        USERNAME: [ubuntu]
    steps:
      - name: Deploy to EC2 instance via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ matrix.HOST }}
          username: ${{ matrix.USERNAME }}
          key: ${{ secrets.KEY }}
          port: 22
          script: | 
            # login docker
            sudo docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
            sudo docker stop flask-app
            sudo docker rm flask-app

            # run new container
            cd flask/
            sudo docker compose up -d

  get_request:
    name: "Perform REST API"
    runs-on: ubuntu-latest
    needs: Deploy
    strategy:
      matrix:
        REQUEST: ["http://3.74.156.7:5000/api/heath-check/ok", "http://3.73.123.245:5000/api/heath-check/ok"]
    steps:
      - name: "Call API"
        run:
          curl -s -I ${{ matrix.REQUEST }} -X GET
